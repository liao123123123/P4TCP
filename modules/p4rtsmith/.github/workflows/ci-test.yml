name: "test-rtsmith"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Cancel any preceding run on the pull request.
concurrency:
  group: test-rtsmith-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  # Build and test P4RuntimeSmith on Ubuntu 22.04.
  build-and-test-rtsmith:
    runs-on: ubuntu-22.04
    env:
      CTEST_PARALLEL_LEVEL: 4
      IMAGE_TYPE: test
      CMAKE_UNITY_BUILD: ON
      ENABLE_TEST_TOOLS: ON
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: test-flay-${{ runner.os }}
        max-size: 1000M

    - name: Pull P4C and link P4RuntimeSmith.
      run: |
        git clone --recurse-submodules -j2 https://github.com/p4lang/p4c/ $GITHUB_WORKSPACE/p4c
        ln -sf $GITHUB_WORKSPACE $GITHUB_WORKSPACE/p4c/backends/p4tools/modules/

    - name: Build (Ubuntu 22.04)
      run: |
        tools/ci-build.sh
      working-directory: p4c

    - name: Test
      run: |
        ctest -R rtsmith- --output-on-failure --schedule-random
      working-directory: p4c/build


  # Build and test P4RuntimeSmith on MacOS 14
  test-mac-os:
    runs-on: macos-14
    env:
      CTEST_PARALLEL_LEVEL: 4
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: test-${{ runner.os }}
        max-size: 1000M

    - name: Pull P4C and link P4RuntimeSmith.
      run: |
        git clone --recurse-submodules -j2 https://github.com/p4lang/p4c/ $GITHUB_WORKSPACE/../p4c
        ln -sf $GITHUB_WORKSPACE $GITHUB_WORKSPACE/../p4c/backends/p4tools/modules/
        ln -sf $GITHUB_WORKSPACE/../p4c/tools/install_mac_deps.sh $GITHUB_WORKSPACE/install_mac_deps.sh

    - name: Get brew cache dir
      id: brew-cache
      run: |
        echo "dir=$(brew --prefix)" >> $GITHUB_OUTPUT

    - name: Cache Homebrew Packages
      id: cache-homebrew-packages
      uses: actions/cache@v4
      env:
        cache-name: homebrew-packages
      with:
        path: ${{ steps.brew-cache.outputs.dir }}
        key: ${{ runner.os }}-m1-${{ hashFiles('install_mac_deps.sh') }}


    - name: Install dependencies (MacOS)
      run: |
        # TODO: We shouldn't need to do this.
        python3 -m pip config set global.break-system-packages true
        tools/install_mac_deps.sh
      working-directory: ../p4c

    - name: Build (MacOS)
      run: |
          source ~/.bash_profile
          ./bootstrap.sh -DENABLE_GC=ON -DCMAKE_BUILD_TYPE=RELEASE \
              -DCMAKE_UNITY_BUILD=ON -DENABLE_TEST_TOOLS=ON
          make -C build -j$((`nproc`+1))
      working-directory: ../p4c

    - name: Run tests (MacOS)
      run: |
        source ~/.bash_profile
        ctest -R rtsmith- --output-on-failure --schedule-random
      working-directory: ../p4c/build
